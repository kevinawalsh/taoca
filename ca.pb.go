// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ca.proto

/*
Package taoca is a generated protocol buffer package.

It is generated from these files:
	ca.proto

It has these top-level messages:
	X509Details
	CSR
	Request
	Cert
	Response
*/
package taoca

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ResponseStatus int32

const (
	ResponseStatus_TAOCA_OK             ResponseStatus = 0
	ResponseStatus_TAOCA_BAD_REQUEST    ResponseStatus = 1
	ResponseStatus_TAOCA_REQUEST_DENIED ResponseStatus = 2
	ResponseStatus_TAOCA_ERROR          ResponseStatus = 3
)

var ResponseStatus_name = map[int32]string{
	0: "TAOCA_OK",
	1: "TAOCA_BAD_REQUEST",
	2: "TAOCA_REQUEST_DENIED",
	3: "TAOCA_ERROR",
}
var ResponseStatus_value = map[string]int32{
	"TAOCA_OK":             0,
	"TAOCA_BAD_REQUEST":    1,
	"TAOCA_REQUEST_DENIED": 2,
	"TAOCA_ERROR":          3,
}

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}
func (x ResponseStatus) String() string {
	return proto.EnumName(ResponseStatus_name, int32(x))
}
func (x *ResponseStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseStatus_value, data, "ResponseStatus")
	if err != nil {
		return err
	}
	*x = ResponseStatus(value)
	return nil
}
func (ResponseStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type X509Details struct {
	CommonName         *string `protobuf:"bytes,1,opt,name=common_name" json:"common_name,omitempty"`
	Country            *string `protobuf:"bytes,2,opt,name=country" json:"country,omitempty"`
	State              *string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	City               *string `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	Organization       *string `protobuf:"bytes,5,opt,name=organization" json:"organization,omitempty"`
	OrganizationalUnit *string `protobuf:"bytes,6,opt,name=organizational_unit" json:"organizational_unit,omitempty"`
	SerialNumber       *int32  `protobuf:"varint,7,opt,name=serial_number" json:"serial_number,omitempty"`
	XXX_unrecognized   []byte  `json:"-"`
}

func (m *X509Details) Reset()                    { *m = X509Details{} }
func (m *X509Details) String() string            { return proto.CompactTextString(m) }
func (*X509Details) ProtoMessage()               {}
func (*X509Details) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *X509Details) GetCommonName() string {
	if m != nil && m.CommonName != nil {
		return *m.CommonName
	}
	return ""
}

func (m *X509Details) GetCountry() string {
	if m != nil && m.Country != nil {
		return *m.Country
	}
	return ""
}

func (m *X509Details) GetState() string {
	if m != nil && m.State != nil {
		return *m.State
	}
	return ""
}

func (m *X509Details) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *X509Details) GetOrganization() string {
	if m != nil && m.Organization != nil {
		return *m.Organization
	}
	return ""
}

func (m *X509Details) GetOrganizationalUnit() string {
	if m != nil && m.OrganizationalUnit != nil {
		return *m.OrganizationalUnit
	}
	return ""
}

func (m *X509Details) GetSerialNumber() int32 {
	if m != nil && m.SerialNumber != nil {
		return *m.SerialNumber
	}
	return 0
}

type CSR struct {
	// Public key for the certificate being requested, as a serialized
	// tao.CryptoKey.
	PublicKey []byte `protobuf:"bytes,1,req,name=public_key" json:"public_key,omitempty"`
	// Subject name details for the certificate being requested.
	Name *X509Details `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	// Requested duration for the certificate being requested.
	Years *int32 `protobuf:"varint,3,req,name=years" json:"years,omitempty"`
	// Whether the certificate being requested should have the IsCA flag set.
	IsCa             *bool  `protobuf:"varint,4,req,name=is_ca" json:"is_ca,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *CSR) Reset()                    { *m = CSR{} }
func (m *CSR) String() string            { return proto.CompactTextString(m) }
func (*CSR) ProtoMessage()               {}
func (*CSR) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CSR) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *CSR) GetName() *X509Details {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *CSR) GetYears() int32 {
	if m != nil && m.Years != nil {
		return *m.Years
	}
	return 0
}

func (m *CSR) GetIsCa() bool {
	if m != nil && m.IsCa != nil {
		return *m.IsCa
	}
	return false
}

type Request struct {
	CSR              *CSR   `protobuf:"bytes,1,req,name=CSR" json:"CSR,omitempty"`
	Signature        []byte `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Request) GetCSR() *CSR {
	if m != nil {
		return m.CSR
	}
	return nil
}

func (m *Request) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

type Cert struct {
	X509Cert         []byte `protobuf:"bytes,1,opt,name=x509_cert" json:"x509_cert,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Cert) Reset()                    { *m = Cert{} }
func (m *Cert) String() string            { return proto.CompactTextString(m) }
func (*Cert) ProtoMessage()               {}
func (*Cert) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Cert) GetX509Cert() []byte {
	if m != nil {
		return m.X509Cert
	}
	return nil
}

type Response struct {
	Status           *ResponseStatus `protobuf:"varint,1,req,name=status,enum=taoca.ResponseStatus" json:"status,omitempty"`
	ErrorDetail      *string         `protobuf:"bytes,2,opt,name=error_detail" json:"error_detail,omitempty"`
	Cert             []*Cert         `protobuf:"bytes,3,rep,name=cert" json:"cert,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Response) GetStatus() ResponseStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ResponseStatus_TAOCA_OK
}

func (m *Response) GetErrorDetail() string {
	if m != nil && m.ErrorDetail != nil {
		return *m.ErrorDetail
	}
	return ""
}

func (m *Response) GetCert() []*Cert {
	if m != nil {
		return m.Cert
	}
	return nil
}

func init() {
	proto.RegisterType((*X509Details)(nil), "taoca.X509Details")
	proto.RegisterType((*CSR)(nil), "taoca.CSR")
	proto.RegisterType((*Request)(nil), "taoca.Request")
	proto.RegisterType((*Cert)(nil), "taoca.Cert")
	proto.RegisterType((*Response)(nil), "taoca.Response")
	proto.RegisterEnum("taoca.ResponseStatus", ResponseStatus_name, ResponseStatus_value)
}

func init() { proto.RegisterFile("ca.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4f, 0x6b, 0x1b, 0x31,
	0x14, 0xc4, 0xbb, 0xff, 0x62, 0xe7, 0xed, 0x3a, 0x71, 0x94, 0x98, 0x2a, 0xf4, 0x22, 0x16, 0x0a,
	0x4b, 0x0f, 0x26, 0x18, 0x7c, 0xc8, 0xd1, 0xb5, 0xf7, 0x50, 0x0a, 0x35, 0x5d, 0xa7, 0xd0, 0x9e,
	0x54, 0x59, 0x7d, 0x04, 0x51, 0x5b, 0x72, 0x25, 0x2d, 0xd4, 0xfd, 0x28, 0xfd, 0xb4, 0x65, 0xe5,
	0x0d, 0x98, 0x1e, 0x67, 0x46, 0xfc, 0xf4, 0x66, 0x60, 0x28, 0xc5, 0xf4, 0x60, 0x8d, 0x37, 0x24,
	0xf3, 0xc2, 0x48, 0x51, 0xfe, 0x8d, 0x20, 0xff, 0x3a, 0x7f, 0x78, 0x5c, 0xa1, 0x17, 0x6a, 0xe7,
	0xc8, 0x2d, 0xe4, 0xd2, 0xec, 0xf7, 0x46, 0x73, 0x2d, 0xf6, 0x48, 0x23, 0x16, 0x55, 0x97, 0xe4,
	0x1a, 0x06, 0xd2, 0xb4, 0xda, 0xdb, 0x23, 0x8d, 0x83, 0x31, 0x82, 0xcc, 0x79, 0xe1, 0x91, 0x26,
	0x41, 0x16, 0x90, 0x4a, 0xe5, 0x8f, 0x34, 0x0d, 0xea, 0x0e, 0x0a, 0x63, 0x9f, 0x85, 0x56, 0x7f,
	0x84, 0x57, 0x46, 0xd3, 0x2c, 0xb8, 0x6f, 0xe0, 0xf6, 0xdc, 0x15, 0x3b, 0xde, 0x6a, 0xe5, 0xe9,
	0x45, 0x08, 0x27, 0x30, 0x72, 0x68, 0x95, 0xd8, 0x71, 0xdd, 0xee, 0xb7, 0x68, 0xe9, 0x80, 0x45,
	0x55, 0x56, 0x7e, 0x83, 0x64, 0xb9, 0x69, 0x08, 0x01, 0x38, 0xb4, 0xdb, 0x9d, 0x92, 0xfc, 0x27,
	0x1e, 0x69, 0xc4, 0xe2, 0xaa, 0x20, 0x0c, 0xd2, 0x70, 0x60, 0xcc, 0xe2, 0x2a, 0x9f, 0x91, 0x69,
	0x68, 0x33, 0x3d, 0x6f, 0x32, 0x82, 0xec, 0x88, 0xc2, 0x3a, 0x9a, 0xb0, 0xb8, 0xca, 0x3a, 0xa9,
	0x1c, 0x97, 0x82, 0xa6, 0x2c, 0xae, 0x86, 0xe5, 0x1c, 0x06, 0x0d, 0xfe, 0x6a, 0xd1, 0x79, 0xf2,
	0x3a, 0xfc, 0x12, 0xb8, 0xf9, 0x0c, 0x7a, 0x52, 0xf7, 0xef, 0x0d, 0x5c, 0x3a, 0xf5, 0xac, 0x85,
	0x6f, 0x2d, 0x86, 0xe2, 0x45, 0x79, 0x0f, 0xe9, 0x12, 0xad, 0xef, 0xa2, 0xdf, 0xf3, 0x87, 0x47,
	0x2e, 0xd1, 0xfa, 0x30, 0x52, 0x51, 0x6e, 0x61, 0xd8, 0xa0, 0x3b, 0x18, 0xed, 0x90, 0xbc, 0x85,
	0x8b, 0x6e, 0x9f, 0xd6, 0x05, 0xea, 0xd5, 0x6c, 0xd2, 0x53, 0x5f, 0x1e, 0x6c, 0x42, 0xd8, 0x2d,
	0x85, 0xd6, 0x1a, 0xcb, 0x7f, 0x84, 0x9b, 0xfb, 0x71, 0xef, 0x21, 0x0d, 0xd8, 0x84, 0x25, 0x55,
	0x3e, 0xcb, 0x5f, 0x0e, 0x42, 0xeb, 0xdf, 0x7d, 0x87, 0xab, 0xff, 0x10, 0x05, 0x0c, 0x9f, 0x16,
	0xeb, 0xe5, 0x82, 0xaf, 0x3f, 0x8e, 0x5f, 0x91, 0x09, 0xdc, 0x9c, 0xd4, 0xfb, 0xc5, 0x8a, 0x37,
	0xf5, 0xe7, 0x2f, 0xf5, 0xe6, 0x69, 0x1c, 0x11, 0x0a, 0x77, 0x27, 0xbb, 0xb7, 0xf8, 0xaa, 0xfe,
	0xf4, 0xa1, 0x5e, 0x8d, 0x63, 0x72, 0x0d, 0xf9, 0x29, 0xa9, 0x9b, 0x66, 0xdd, 0x8c, 0x93, 0x7f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0xaf, 0x63, 0xb3, 0x1f, 0x21, 0x02, 0x00, 0x00,
}
