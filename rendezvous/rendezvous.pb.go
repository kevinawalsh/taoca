// Code generated by protoc-gen-go.
// source: rendezvous.proto
// DO NOT EDIT!

/*
Package rendezvous is a generated protocol buffer package.

It is generated from these files:
	rendezvous.proto

It has these top-level messages:
	Binding
	Request
	Response
*/
package rendezvous

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type RequestType int32

const (
	RequestType_RENDEZVOUS_REGISTER RequestType = 0
	RequestType_RENDEZVOUS_LOOKUP   RequestType = 1
	RequestType_RENDEZVOUS_POLICY   RequestType = 2
)

var RequestType_name = map[int32]string{
	0: "RENDEZVOUS_REGISTER",
	1: "RENDEZVOUS_LOOKUP",
	2: "RENDEZVOUS_POLICY",
}
var RequestType_value = map[string]int32{
	"RENDEZVOUS_REGISTER": 0,
	"RENDEZVOUS_LOOKUP":   1,
	"RENDEZVOUS_POLICY":   2,
}

func (x RequestType) Enum() *RequestType {
	p := new(RequestType)
	*p = x
	return p
}
func (x RequestType) String() string {
	return proto.EnumName(RequestType_name, int32(x))
}
func (x *RequestType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RequestType_value, data, "RequestType")
	if err != nil {
		return err
	}
	*x = RequestType(value)
	return nil
}

type ResponseStatus int32

const (
	ResponseStatus_RENDEZVOUS_OK             ResponseStatus = 0
	ResponseStatus_RENDEZVOUS_BAD_REQUEST    ResponseStatus = 1
	ResponseStatus_RENDEZVOUS_REQUEST_DENIED ResponseStatus = 2
	ResponseStatus_RENDEZVOUS_ERROR          ResponseStatus = 3
)

var ResponseStatus_name = map[int32]string{
	0: "RENDEZVOUS_OK",
	1: "RENDEZVOUS_BAD_REQUEST",
	2: "RENDEZVOUS_REQUEST_DENIED",
	3: "RENDEZVOUS_ERROR",
}
var ResponseStatus_value = map[string]int32{
	"RENDEZVOUS_OK":             0,
	"RENDEZVOUS_BAD_REQUEST":    1,
	"RENDEZVOUS_REQUEST_DENIED": 2,
	"RENDEZVOUS_ERROR":          3,
}

func (x ResponseStatus) Enum() *ResponseStatus {
	p := new(ResponseStatus)
	*p = x
	return p
}
func (x ResponseStatus) String() string {
	return proto.EnumName(ResponseStatus_name, int32(x))
}
func (x *ResponseStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ResponseStatus_value, data, "ResponseStatus")
	if err != nil {
		return err
	}
	*x = ResponseStatus(value)
	return nil
}

type Binding struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Host             *string `protobuf:"bytes,2,opt,name=host" json:"host,omitempty"`
	Port             *string `protobuf:"bytes,3,opt,name=port" json:"port,omitempty"`
	Protocol         *string `protobuf:"bytes,4,opt,name=protocol" json:"protocol,omitempty"`
	Principal        *string `protobuf:"bytes,5,opt,name=principal" json:"principal,omitempty"`
	Ttl              *uint64 `protobuf:"varint,6,opt,name=ttl" json:"ttl,omitempty"`
	Age              *uint64 `protobuf:"varint,7,opt,name=age" json:"age,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Binding) Reset()         { *m = Binding{} }
func (m *Binding) String() string { return proto.CompactTextString(m) }
func (*Binding) ProtoMessage()    {}

func (m *Binding) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Binding) GetHost() string {
	if m != nil && m.Host != nil {
		return *m.Host
	}
	return ""
}

func (m *Binding) GetPort() string {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return ""
}

func (m *Binding) GetProtocol() string {
	if m != nil && m.Protocol != nil {
		return *m.Protocol
	}
	return ""
}

func (m *Binding) GetPrincipal() string {
	if m != nil && m.Principal != nil {
		return *m.Principal
	}
	return ""
}

func (m *Binding) GetTtl() uint64 {
	if m != nil && m.Ttl != nil {
		return *m.Ttl
	}
	return 0
}

func (m *Binding) GetAge() uint64 {
	if m != nil && m.Age != nil {
		return *m.Age
	}
	return 0
}

type Request struct {
	// Request type.
	Type *RequestType `protobuf:"varint,1,req,name=type,enum=rendezvous.RequestType" json:"type,omitempty"`
	// Pattern to be matched against names for RENDEZVOUS_LOOKUP.
	Query *string `protobuf:"bytes,2,opt,name=query" json:"query,omitempty"`
	// Binding for RENDEZVOUS_REGISTER.
	Binding          *Binding `protobuf:"bytes,3,opt,name=binding" json:"binding,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}

func (m *Request) GetType() RequestType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return RequestType_RENDEZVOUS_REGISTER
}

func (m *Request) GetQuery() string {
	if m != nil && m.Query != nil {
		return *m.Query
	}
	return ""
}

func (m *Request) GetBinding() *Binding {
	if m != nil {
		return m.Binding
	}
	return nil
}

type Response struct {
	Status           *ResponseStatus `protobuf:"varint,1,req,name=status,enum=rendezvous.ResponseStatus" json:"status,omitempty"`
	ErrorDetail      *string         `protobuf:"bytes,2,opt,name=error_detail" json:"error_detail,omitempty"`
	Policy           *string         `protobuf:"bytes,3,opt,name=policy" json:"policy,omitempty"`
	Bindings         []*Binding      `protobuf:"bytes,4,rep,name=bindings" json:"bindings,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}

func (m *Response) GetStatus() ResponseStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ResponseStatus_RENDEZVOUS_OK
}

func (m *Response) GetErrorDetail() string {
	if m != nil && m.ErrorDetail != nil {
		return *m.ErrorDetail
	}
	return ""
}

func (m *Response) GetPolicy() string {
	if m != nil && m.Policy != nil {
		return *m.Policy
	}
	return ""
}

func (m *Response) GetBindings() []*Binding {
	if m != nil {
		return m.Bindings
	}
	return nil
}

func init() {
	proto.RegisterEnum("rendezvous.RequestType", RequestType_name, RequestType_value)
	proto.RegisterEnum("rendezvous.ResponseStatus", ResponseStatus_name, ResponseStatus_value)
}
